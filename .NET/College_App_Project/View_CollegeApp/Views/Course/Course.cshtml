@{
    ViewData["Title"] = "Courses";
}

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

<div class="container my-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary"><i class="bi bi-book"></i> Course List</h2>
        <button id="addCourseBtn" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Add Course
        </button>
    </div>

    <div class="card shadow-lg p-4">
        <div class="d-flex justify-content-between mb-3">
            <button id="loadBtn" class="btn btn-primary">
                <i class="bi bi-arrow-clockwise"></i> Load Courses
            </button>

            <div class="d-flex align-items-center">
                <label class="me-2 fw-semibold text-secondary">Filter by Course:</label>
                <select id="courseDropdown" class="form-select" style="width: 250px;">
                    <option value="">-- Select Course --</option>
                </select>
            </div>
        </div>

        <div id="courses" class="table-responsive"></div>
    </div>
</div>

<!-- Modal for Add/Edit -->
<div class="modal fade" id="courseModal" tabindex="-1" aria-labelledby="courseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="courseModalLabel">Add / Edit Course</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="courseForm">
                    <input type="hidden" id="courseId" />

                    <div class="mb-3">
                        <label for="CourseCode" class="form-label fw-semibold">Course Code</label>
                        <input type="text" id="CourseCode" class="form-control" placeholder="Enter Course Code (e.g., CS101)" required />
                    </div>

                    <div class="mb-3">
                        <label for="CourseName" class="form-label fw-semibold">Course Name</label>
                        <input type="text" id="CourseName" class="form-control" placeholder="Enter Course Name" required />
                    </div>

                    <div class="mb-3">
                        <label for="Department" class="form-label fw-semibold">Department</label>
                        <input type="text" id="Department" class="form-control" placeholder="Enter Department" />
                    </div>

                    <div class="mb-3">
                        <label for="Semester" class="form-label fw-semibold">Semester</label>
                        <select id="Semester" class="form-select">
                            <option value="">Select Semester</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                        </select>
                    </div>

                    <button type="submit" class="btn btn-primary w-100">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal for View Students -->
<div class="modal fade" id="studentsModal" tabindex="-1" aria-labelledby="studentsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="studentsModalLabel">Enrolled Students</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="studentsList"></div>
            </div>
        </div>
    </div>
</div>

<!-- jQuery + Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    let coursesData = [];
    let filteredData = []; // ✅ Store filtered data separately
    let currentPage = 1;
    const pageSize = 5; // ✅ Number of courses per page

    // Load courses
    $("#loadBtn").click(function () {
        const token = localStorage.getItem("jwtToken");

        if (!token) {
            alert("Please login first!");
            window.location.href = "/Auth/Login";
            return;
        }

        $.ajax({
            url: "https://localhost:7018/api/Courses/GetAll",
            type: "GET",
            headers: { "Authorization": "Bearer " + token },
            success: function (data) {
                coursesData = data;
                filteredData = data; // Initialize filtered data
                currentPage = 1; // Reset to first page
                populateDropdown(data);
                renderTable();
            },
            error: function (xhr) {
                if (xhr.status === 401) {
                    $("#courses").html("<p class='text-danger'>Unauthorized. Please login again.</p>");
                } else {
                    $("#courses").html("<p class='text-danger'>Error fetching data.</p>");
                }
            }
        });
    });

    // ✅ Populate dropdown with course names
    function populateDropdown(data) {
        let options = "<option value=''>-- Select Course --</option>";
        data.forEach(c => {
            options += `<option value='${c.courseName}'>${c.courseName}</option>`;
        });
        $("#courseDropdown").html(options);
    }

    // ✅ Filter by course name (Client-side filtering)
    $("#courseDropdown").change(function () {
        const courseName = $(this).val();

        if (!courseName) {
            // Show all courses
            filteredData = coursesData;
        } else {
            // Filter from existing data
            filteredData = coursesData.filter(c => c.courseName === courseName);
        }

        currentPage = 1; // Reset to first page when filtering
        renderTable();
    });

    // ✅ Render Table with Pagination
    function renderTable() {
        if (!filteredData || filteredData.length === 0) {
            $("#courses").html("<p class='text-muted'>No courses to display.</p>");
            return;
        }

        const totalPages = Math.ceil(filteredData.length / pageSize);
        const start = (currentPage - 1) * pageSize;
        const end = start + pageSize;
        const paginatedData = filteredData.slice(start, end);

        let html = `
                <table class='table table-hover align-middle text-center'>
                    <thead class='table-dark'>
                        <tr>
                            <th>Course Code</th>
                            <th>Course Name</th>
                            <th>Department</th>
                            <th>Semester</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
            `;

        paginatedData.forEach(c => {
            const studentCount = c.students ? c.students.length : 0;
            html += `
                    <tr>
                        <td><strong>${c.courseCode}</strong></td>
                        <td>${c.courseName}</td>
                        <td>${c.department || 'N/A'}</td>
                        <td>${c.semester || 'N/A'}</td>
                        <td>
                            <button class='btn btn-warning btn-sm me-2 editBtn' data-id='${c.courseId}'>
                                <i class='bi bi-pencil-square'></i> Edit
                            </button>
                            <button class='btn btn-danger btn-sm deleteBtn' data-id='${c.courseId}'>
                                <i class='bi bi-trash'></i> Delete
                            </button>
                        </td>
                    </tr>
                `;
        });

        html += `
                    </tbody>
                </table>

                <!-- ✅ Pagination Controls -->
                <div class='d-flex justify-content-between align-items-center mt-3'>
                    <button class='btn btn-outline-primary btn-sm' id='prevPage' ${currentPage === 1 ? "disabled" : ""}>
                        <i class='bi bi-arrow-left'></i> Previous
                    </button>
                    <span class='fw-semibold text-secondary'>
                        Page ${currentPage} of ${totalPages} (Total: ${filteredData.length} courses)
                    </span>
                    <button class='btn btn-outline-primary btn-sm' id='nextPage' ${currentPage === totalPages ? "disabled" : ""}>
                        Next <i class='bi bi-arrow-right'></i>
                    </button>
                </div>
            `;

        $("#courses").html(html);

        // Pagination button handlers
        $("#prevPage").click(() => {
            if (currentPage > 1) {
                currentPage--;
                renderTable();
            }
        });

        $("#nextPage").click(() => {
            if (currentPage < totalPages) {
                currentPage++;
                renderTable();
            }
        });
    }

    // Open Modal for Add
    $("#addCourseBtn").click(function () {
        $("#courseForm")[0].reset();
        $("#courseId").val('');
        $("#courseModalLabel").text("Add Course");
        $("#courseModal").modal("show");
    });

    // Open Modal for Edit
    $(document).on("click", ".editBtn", function () {
        const id = $(this).data("id");
        const course = filteredData.find(c => c.courseId === id);


        if (course) {
            $("#courseId").val(course.courseId);
            $("#CourseCode").val(course.courseCode);
            $("#CourseName").val(course.courseName);
            $("#Department").val(course.department || '');
            $("#Semester").val(course.semester || '');
            $("#courseModalLabel").text("Edit Course");
            $("#courseModal").modal("show");
        }
    });

    // View Students
    $(document).on("click", ".viewStudentsBtn", function () {
        const id = $(this).data("id");
        const course = coursesData.find(c => c.courseId === id);

        if (course && course.students && course.students.length > 0) {
            $("#studentsModalLabel").text(`Students Enrolled in ${course.courseName}`);

            let html = `
                    <table class='table table-striped'>
                        <thead>
                            <tr>
                                <th>Roll Number</th>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Phone</th>
                            </tr>
                        </thead>
                        <tbody>
                `;

            course.students.forEach(s => {
                html += `
                        <tr>
                            <td>${s.rollNumber}</td>
                            <td>${s.name}</td>
                            <td>${s.email || 'N/A'}</td>
                            <td>${s.phone || 'N/A'}</td>
                        </tr>
                    `;
            });

            html += "</tbody></table>";
            $("#studentsList").html(html);
            $("#studentsModal").modal("show");
        }
    });

    // Delete Course
    $(document).on("click", ".deleteBtn", function () {
        const id = $(this).data("id");
        const course = filteredData.find(c => c.courseId === id);

        if (!course) return;

        const studentCount = course.students ? course.students.length : 0;
        let confirmMessage = `Are you sure you want to delete ${course.courseName}?`;

        if (studentCount > 0) {
            confirmMessage += `\n\nWarning: This course has ${studentCount} enrolled student(s).`;
        }

        if (confirm(confirmMessage)) {
            const token = localStorage.getItem("jwtToken");

            if (!token) {
                alert("Please login first!");
                window.location.href = "/Auth/Login";
                return;
            }

            $.ajax({
                url: `https://localhost:7018/api/Courses/Delete/${id}`,
                type: "DELETE",
                success: function (response) {
                    alert(response);
                    fetchCourses();
                },
                error: function (xhr) {
                    alert(xhr.responseText || "Error deleting course.");
                }
            });
        }
    });

    // Submit Form (Add or Edit)
    $("#courseForm").submit(function (e) {
        e.preventDefault();

        const token = localStorage.getItem("jwtToken");

        if (!token) {
            alert("Please login first!");
            window.location.href = "/Auth/Login";
            return;
        }

        const course = {
            courseId: parseInt($("#courseId").val()) || 0,
            courseCode: $("#CourseCode").val(),
            courseName: $("#CourseName").val(),
            department: $("#Department").val() || null,
            semester: parseInt($("#Semester").val()) || null
        };

        const isEdit = course.courseId > 0;

        const apiUrl = isEdit
            ? `https://localhost:7018/api/Courses/Update/${course.courseId}`
            : "https://localhost:7018/api/Courses/Add";


        $.ajax({
            url: apiUrl,
            type: isEdit ? "PUT" : "POST",
            headers: { "Authorization": "Bearer " + token },
            contentType: "application/json",
            data: JSON.stringify(course),
            success: function () {
                $("#courseModal").modal("hide");
                $("#loadBtn").click();
                alert(isEdit ? "Course updated successfully!" : "Course added successfully!");
            },
            error: function (xhr) {
                alert("Error saving course: " + (xhr.responseText || "Unknown error"));
            }
        });
    });

    // Load courses on page load
    $(document).ready(function () {
        $("#loadBtn").click();
    });
</script>